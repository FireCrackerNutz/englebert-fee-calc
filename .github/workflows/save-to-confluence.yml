name: Save Estimate to Confluence

on:
  workflow_dispatch:
    inputs:
      clientName:
        description: "Client Name"
        required: true
      imageData:
        description: "Base64 Image Data"
        required: true

jobs:
  save-to-confluence:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y curl jq

      - name: Debug Environment Variables
        run: |
          echo "Debugging GitHub Secrets..."
          echo "CONFLUENCE_USER=${{ secrets.CONFLUENCE_USER }}"
          echo "CONFLUENCE_API_TOKEN=${{ secrets.CONFLUENCE_API_TOKEN }}" | sed 's/./*/g' # Mask token

      - name: Test Authentication with Confluence API
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
            -u "${{ secrets.CONFLUENCE_USER }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            -X GET "https://englebertltd.atlassian.net/wiki/rest/api/space/Clients")

          if [[ "$RESPONSE" -ne 200 ]]; then
            echo "ðŸš¨ Confluence API authentication failed! Received HTTP status $RESPONSE"
            exit 1
          else
            echo "âœ… Confluence API authentication successful!"
          fi

      - name: Decode Image and Save Estimate to Confluence
        run: |
          CLIENT_NAME="${{ github.event.inputs.clientName }}"
          IMAGE_DATA="${{ github.event.inputs.imageData }}"

          echo "ðŸš€ Sending Estimate to Confluence for Client: $CLIENT_NAME"

          # Create JSON payload
          JSON_PAYLOAD=$(jq -n --arg title "Fee Estimate - $CLIENT_NAME" \
            --arg space "Clients" \
            --arg body "<h1>Fee Estimate</h1><p>Client: $CLIENT_NAME</p><p><img src='data:image/png;base64,$IMAGE_DATA' alt='Estimate Screenshot'></p>" \
            '{
              "type": "page",
              "title": $title,
              "ancestors": [{"id": 182911020}],
              "space": {"key": $space},
              "body": {
                "storage": {
                  "value": $body,
                  "representation": "storage"
                }
              }
            }')

          # Send request to Confluence API
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST \
            "https://englebertltd.atlassian.net/wiki/rest/api/content" \
            -H "Authorization: Basic $(echo -n "${{ secrets.CONFLUENCE_USER }}:${{ secrets.CONFLUENCE_API_TOKEN }}" | openssl base64 -A)" \
            -H "Content-Type: application/json" \
            --data "$JSON_PAYLOAD")

          if [[ "$RESPONSE" -ne 200 ]]; then
            echo "ðŸš¨ Confluence API request failed! HTTP Status: $RESPONSE"
            cat response.json
            exit 1
          else
            echo "âœ… Successfully created Confluence page!"
          fi
