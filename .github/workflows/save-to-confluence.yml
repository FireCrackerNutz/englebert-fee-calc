name: Save Estimate to Confluence

on:
  workflow_dispatch:
    inputs:
      clientName:
        description: "Client Name"
        required: true
      imageData:
        description: "Base64 Image Data"
        required: true

jobs:
  save-to-confluence:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Debug Environment
        run: |
          echo "Checking available commands..."
          which base64 || echo "ERROR: base64 command not found!"
          which curl || echo "ERROR: curl command not found!"
          which jq || echo "ERROR: jq command not found!"

      - name: Debug Inputs
        run: |
          echo "Client Name: ${{ github.event.inputs.clientName }}"
          echo "Image Data Length: $(echo -n '${{ github.event.inputs.imageData }}' | wc -c)"
          echo "Image Data Preview: $(echo -n '${{ github.event.inputs.imageData }}' | head -c 100)..."

      - name: Encode Confluence Auth
        run: |
          AUTH_HEADER=$(echo -n "${{ secrets.CONFLUENCE_USER }}:${{ secrets.CONFLUENCE_API_TOKEN }}" | base64 | tr -d '\n')
          echo "AUTH_HEADER=$AUTH_HEADER" >> $GITHUB_ENV

      - name: Send Data to Confluence
        run: |
          CLIENT_NAME="${{ github.event.inputs.clientName }}"
          IMAGE_DATA="${{ github.event.inputs.imageData }}"

          echo "Sending request to Confluence..."
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" -X POST "https://englebertltd.atlassian.net/wiki/rest/api/content" \
            -H "Authorization: Basic $AUTH_HEADER" \
            -H "Content-Type: application/json" \
            --data '{
              "type": "page",
              "title": "Fee Estimate - '"$CLIENT_NAME"'",
              "ancestors": [{ "id": "182911020" }],
              "space": { "key": "Clients" },
              "body": {
                "storage": {
                  "value": "<h1>Fee Estimate</h1><p>Client: '"$CLIENT_NAME"'</p><p><img src='"$IMAGE_DATA"' alt='Estimate Screenshot'></p>",
                  "representation": "storage"
                }
              }
            }')

          echo "HTTP Response Code: $RESPONSE"
          cat response.json

          if [[ "$RESPONSE" -ne 200 && "$RESPONSE" -ne 201 ]]; then
            echo "ERROR: Failed to create page on Confluence!"
            exit 1
          fi

      - name: Cleanup
        run: rm -f response.json
